2025-08-25 04:56:55.199017Z jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1624)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:469)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:714)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:598)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:844)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:721)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:400)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:720)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-25 04:56:55.727274Z jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1624)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:469)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:714)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:598)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:844)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:721)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:400)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:720)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-25 04:57:27.491753Z jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1624)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:469)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:714)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:598)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:844)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:721)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:400)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:720)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-27 01:37:32.006027Z jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1624)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:469)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:714)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:598)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:844)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:721)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:400)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:720)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-27 02:57:03.891095Z jdbc[4]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1624)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:469)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:714)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:598)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:844)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:721)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:400)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:720)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-26 21:57:56.574815-05:00 database: flush
org.h2.message.DbException: Error General : "org.h2.mvstore.MVStoreException: The file is locked: D:/Unillanos Workspace/Arq-Soft-Labs/MonolitoPorCapas/SistemaClientes/database/clientes.mv.db [2.3.230/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: D:/Unillanos Workspace/Arq-Soft-Labs/MonolitoPorCapas/SistemaClientes/database/clientes.mv.db [2.3.230/7]" [50000-230]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:407)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:122)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:1546)
	at org.h2.mvstore.MVStore.panic(MVStore.java:371)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:291)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2035)
	at org.h2.mvstore.db.Store.<init>(Store.java:133)
	at org.h2.engine.Database.<init>(Database.java:326)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:344)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:124)
	at org.h2.Driver.connect(Driver.java:59)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:682)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at DatabaseConfig.H2ConnectionManager.getConnection(H2ConnectionManager.java:49)
	at DatabaseConfig.H2ConnectionManager.inicializarBaseDeDatos(H2ConnectionManager.java:69)
	at DatabaseConfig.H2ConnectionManager.<init>(H2ConnectionManager.java:30)
	at DatabaseConfig.H2ConnectionManager.obtenerInstancia(H2ConnectionManager.java:40)
	at DAO.ClienteDAO.eliminar(ClienteDAO.java:71)
	at Repositories.ClienteRepositoryImpl.eliminar(ClientesRepositoryImpl.java:40)
	at Inicio.Main.main(Main.java:13)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Error General : "org.h2.mvstore.MVStoreException: The file is locked: D:/Unillanos Workspace/Arq-Soft-Labs/MonolitoPorCapas/SistemaClientes/database/clientes.mv.db [2.3.230/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: D:/Unillanos Workspace/Arq-Soft-Labs/MonolitoPorCapas/SistemaClientes/database/clientes.mv.db [2.3.230/7]" [50000-230]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:566)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	... 24 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: D:/Unillanos Workspace/Arq-Soft-Labs/MonolitoPorCapas/SistemaClientes/database/clientes.mv.db [2.3.230/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:996)
	at org.h2.mvstore.SingleFileStore.lockFileChannel(SingleFileStore.java:143)
	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:117)
	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:81)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:286)
	... 18 more
2025-08-26 21:58:09.061150-05:00 database: flush
org.h2.message.DbException: Error General : "org.h2.mvstore.MVStoreException: The file is locked: D:/Unillanos Workspace/Arq-Soft-Labs/MonolitoPorCapas/SistemaClientes/database/clientes.mv.db [2.3.230/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: D:/Unillanos Workspace/Arq-Soft-Labs/MonolitoPorCapas/SistemaClientes/database/clientes.mv.db [2.3.230/7]" [50000-230]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:407)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:122)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:1546)
	at org.h2.mvstore.MVStore.panic(MVStore.java:371)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:291)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2035)
	at org.h2.mvstore.db.Store.<init>(Store.java:133)
	at org.h2.engine.Database.<init>(Database.java:326)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:344)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:124)
	at org.h2.Driver.connect(Driver.java:59)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:682)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
	at DatabaseConfig.H2ConnectionManager.getConnection(H2ConnectionManager.java:49)
	at DatabaseConfig.H2ConnectionManager.inicializarBaseDeDatos(H2ConnectionManager.java:69)
	at DatabaseConfig.H2ConnectionManager.<init>(H2ConnectionManager.java:30)
	at DatabaseConfig.H2ConnectionManager.obtenerInstancia(H2ConnectionManager.java:40)
	at DAO.ClienteDAO.eliminar(ClienteDAO.java:71)
	at Repositories.ClienteRepositoryImpl.eliminar(ClientesRepositoryImpl.java:40)
	at Inicio.Main.main(Main.java:13)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Error General : "org.h2.mvstore.MVStoreException: The file is locked: D:/Unillanos Workspace/Arq-Soft-Labs/MonolitoPorCapas/SistemaClientes/database/clientes.mv.db [2.3.230/7]"
General error: "org.h2.mvstore.MVStoreException: The file is locked: D:/Unillanos Workspace/Arq-Soft-Labs/MonolitoPorCapas/SistemaClientes/database/clientes.mv.db [2.3.230/7]" [50000-230]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:566)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	... 24 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: D:/Unillanos Workspace/Arq-Soft-Labs/MonolitoPorCapas/SistemaClientes/database/clientes.mv.db [2.3.230/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:996)
	at org.h2.mvstore.SingleFileStore.lockFileChannel(SingleFileStore.java:143)
	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:117)
	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:81)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:286)
	... 18 more
2025-08-27 02:58:43.106766Z jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1624)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:469)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:714)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:598)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:844)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:721)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:400)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:720)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-27 05:10:57.924981Z jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1624)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:469)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:714)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:598)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:844)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:721)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:400)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:720)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-28 22:37:03.264413-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Error de Sintaxis en sentencia SQL "CREATE [*]DATABASE IF NOT EXISTS biblioteca;\000aUSE biblioteca;\000a\000aCREATE TABLE IF NOT EXISTS lector (\000a    id BIGINT AUTO_INCREMENT PRIMARY KEY,\000a    nombre VARCHAR(100) NOT NULL,\000a    correo VARCHAR(150) UNIQUE NOT NULL\000a);\000a\000aCREATE TABLE IF NOT EXISTS libro (\000a    id BIGINT AUTO_INCREMENT PRIMARY KEY,\000a    titulo VARCHAR(200) NOT NULL,\000a    autor VARCHAR(150) NOT NULL,\000a    disponible BOOLEAN DEFAULT TRUE\000a);\000a\000aCREATE TABLE IF NOT EXISTS prestamo (\000a    id BIGINT AUTO_INCREMENT PRIMARY KEY,\000a    libro_id BIGINT NOT NULL,\000a    lector_id BIGINT NOT NULL,\000a    fecha_prestamo DATE NOT NULL,\000a    fecha_devolucion DATE NULL,\000a\000a    CONSTRAINT fk_prestamo_libro FOREIGN KEY (libro_id) REFERENCES libro(id),\000a    CONSTRAINT fk_prestamo_lector FOREIGN KEY (lector_id) REFERENCES lector(id)\000a);\000a\000aINSERT IGNORE INTO lector (id, nombre, correo) VALUES\000a(1, 'Ana López', 'ana@example.com'),\000a(2, 'Carlos Pérez', 'carlos@example.com');\000a\000aINSERT IGNORE INTO libro (id, titulo, autor, disponible) VALUES\000a(1, 'Cien años de soledad', 'Gabriel García Márquez', TRUE),\000a(2, 'El Principito', 'Antoine de Saint-Exupéry', TRUE);"; se esperaba "OR REPLACE, FORCE, VIEW, MATERIALIZED, ALIAS, SEQUENCE, USER, TRIGGER, ROLE, SCHEMA, CONSTANT, DOMAIN, TYPE, AGGREGATE, LINKED, MEMORY, CACHED, LOCAL TEMPORARY, GLOBAL TEMPORARY, TEMPORARY, TABLE, SYNONYM, UNIQUE, SPATIAL, INDEX"
Syntax error in SQL statement "CREATE [*]DATABASE IF NOT EXISTS biblioteca;\000aUSE biblioteca;\000a\000aCREATE TABLE IF NOT EXISTS lector (\000a    id BIGINT AUTO_INCREMENT PRIMARY KEY,\000a    nombre VARCHAR(100) NOT NULL,\000a    correo VARCHAR(150) UNIQUE NOT NULL\000a);\000a\000aCREATE TABLE IF NOT EXISTS libro (\000a    id BIGINT AUTO_INCREMENT PRIMARY KEY,\000a    titulo VARCHAR(200) NOT NULL,\000a    autor VARCHAR(150) NOT NULL,\000a    disponible BOOLEAN DEFAULT TRUE\000a);\000a\000aCREATE TABLE IF NOT EXISTS prestamo (\000a    id BIGINT AUTO_INCREMENT PRIMARY KEY,\000a    libro_id BIGINT NOT NULL,\000a    lector_id BIGINT NOT NULL,\000a    fecha_prestamo DATE NOT NULL,\000a    fecha_devolucion DATE NULL,\000a\000a    CONSTRAINT fk_prestamo_libro FOREIGN KEY (libro_id) REFERENCES libro(id),\000a    CONSTRAINT fk_prestamo_lector FOREIGN KEY (lector_id) REFERENCES lector(id)\000a);\000a\000aINSERT IGNORE INTO lector (id, nombre, correo) VALUES\000a(1, 'Ana López', 'ana@example.com'),\000a(2, 'Carlos Pérez', 'carlos@example.com');\000a\000aINSERT IGNORE INTO libro (id, titulo, autor, disponible) VALUES\000a(1, 'Cien años de soledad', 'Gabriel García Márquez', TRUE),\000a(2, 'El Principito', 'Antoine de Saint-Exupéry', TRUE);"; expected "OR REPLACE, FORCE, VIEW, MATERIALIZED, ALIAS, SEQUENCE, USER, TRIGGER, ROLE, SCHEMA, CONSTANT, DOMAIN, TYPE, AGGREGATE, LINKED, MEMORY, CACHED, LOCAL TEMPORARY, GLOBAL TEMPORARY, TEMPORARY, TABLE, SYNONYM, UNIQUE, SPATIAL, INDEX"; SQL statement:
CREATE DATABASE IF NOT EXISTS biblioteca;
USE biblioteca;

CREATE TABLE IF NOT EXISTS lector (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    nombre VARCHAR(100) NOT NULL,
    correo VARCHAR(150) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS libro (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    titulo VARCHAR(200) NOT NULL,
    autor VARCHAR(150) NOT NULL,
    disponible BOOLEAN DEFAULT TRUE
);

CREATE TABLE IF NOT EXISTS prestamo (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    libro_id BIGINT NOT NULL,
    lector_id BIGINT NOT NULL,
    fecha_prestamo DATE NOT NULL,
    fecha_devolucion DATE NULL,

    CONSTRAINT fk_prestamo_libro FOREIGN KEY (libro_id) REFERENCES libro(id),
    CONSTRAINT fk_prestamo_lector FOREIGN KEY (lector_id) REFERENCES lector(id)
);

INSERT IGNORE INTO lector (id, nombre, correo) VALUES
(1, 'Ana López', 'ana@example.com'),
(2, 'Carlos Pérez', 'carlos@example.com');

INSERT IGNORE INTO libro (id, titulo, autor, disponible) VALUES
(1, 'Cien años de soledad', 'Gabriel García Márquez', TRUE),
(2, 'El Principito', 'Antoine de Saint-Exupéry', TRUE); [42001-230]
2025-08-28 22:38:14.023611-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Error de Sintaxis en sentencia SQL "CREATE [*]DATABASE IF NOT EXISTS biblioteca;\000aUSE biblioteca;\000a\000aCREATE TABLE IF NOT EXISTS lector (\000a    id BIGINT AUTO_INCREMENT PRIMARY KEY,\000a    nombre VARCHAR(100) NOT NULL,\000a    correo VARCHAR(150) UNIQUE NOT NULL\000a);\000a\000aCREATE TABLE IF NOT EXISTS libro (\000a    id BIGINT AUTO_INCREMENT PRIMARY KEY,\000a    titulo VARCHAR(200) NOT NULL,\000a    autor VARCHAR(150) NOT NULL,\000a    disponible BOOLEAN DEFAULT TRUE\000a);\000a\000aCREATE TABLE IF NOT EXISTS prestamo (\000a    id BIGINT AUTO_INCREMENT PRIMARY KEY,\000a    libro_id BIGINT NOT NULL,\000a    lector_id BIGINT NOT NULL,\000a    fecha_prestamo DATE NOT NULL,\000a    fecha_devolucion DATE NULL,\000a\000a    CONSTRAINT fk_prestamo_libro FOREIGN KEY (libro_id) REFERENCES libro(id),\000a    CONSTRAINT fk_prestamo_lector FOREIGN KEY (lector_id) REFERENCES lector(id)\000a);\000a\000aINSERT IGNORE INTO lector (id, nombre, correo) VALUES\000a(1, 'Ana López', 'ana@example.com'),\000a(2, 'Carlos Pérez', 'carlos@example.com');\000a\000aINSERT IGNORE INTO libro (id, titulo, autor, disponible) VALUES\000a(1, 'Cien años de soledad', 'Gabriel García Márquez', TRUE),\000a(2, 'El Principito', 'Antoine de Saint-Exupéry', TRUE);"; se esperaba "OR REPLACE, FORCE, VIEW, MATERIALIZED, ALIAS, SEQUENCE, USER, TRIGGER, ROLE, SCHEMA, CONSTANT, DOMAIN, TYPE, AGGREGATE, LINKED, MEMORY, CACHED, LOCAL TEMPORARY, GLOBAL TEMPORARY, TEMPORARY, TABLE, SYNONYM, UNIQUE, SPATIAL, INDEX"
Syntax error in SQL statement "CREATE [*]DATABASE IF NOT EXISTS biblioteca;\000aUSE biblioteca;\000a\000aCREATE TABLE IF NOT EXISTS lector (\000a    id BIGINT AUTO_INCREMENT PRIMARY KEY,\000a    nombre VARCHAR(100) NOT NULL,\000a    correo VARCHAR(150) UNIQUE NOT NULL\000a);\000a\000aCREATE TABLE IF NOT EXISTS libro (\000a    id BIGINT AUTO_INCREMENT PRIMARY KEY,\000a    titulo VARCHAR(200) NOT NULL,\000a    autor VARCHAR(150) NOT NULL,\000a    disponible BOOLEAN DEFAULT TRUE\000a);\000a\000aCREATE TABLE IF NOT EXISTS prestamo (\000a    id BIGINT AUTO_INCREMENT PRIMARY KEY,\000a    libro_id BIGINT NOT NULL,\000a    lector_id BIGINT NOT NULL,\000a    fecha_prestamo DATE NOT NULL,\000a    fecha_devolucion DATE NULL,\000a\000a    CONSTRAINT fk_prestamo_libro FOREIGN KEY (libro_id) REFERENCES libro(id),\000a    CONSTRAINT fk_prestamo_lector FOREIGN KEY (lector_id) REFERENCES lector(id)\000a);\000a\000aINSERT IGNORE INTO lector (id, nombre, correo) VALUES\000a(1, 'Ana López', 'ana@example.com'),\000a(2, 'Carlos Pérez', 'carlos@example.com');\000a\000aINSERT IGNORE INTO libro (id, titulo, autor, disponible) VALUES\000a(1, 'Cien años de soledad', 'Gabriel García Márquez', TRUE),\000a(2, 'El Principito', 'Antoine de Saint-Exupéry', TRUE);"; expected "OR REPLACE, FORCE, VIEW, MATERIALIZED, ALIAS, SEQUENCE, USER, TRIGGER, ROLE, SCHEMA, CONSTANT, DOMAIN, TYPE, AGGREGATE, LINKED, MEMORY, CACHED, LOCAL TEMPORARY, GLOBAL TEMPORARY, TEMPORARY, TABLE, SYNONYM, UNIQUE, SPATIAL, INDEX"; SQL statement:
CREATE DATABASE IF NOT EXISTS biblioteca;
USE biblioteca;

CREATE TABLE IF NOT EXISTS lector (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    nombre VARCHAR(100) NOT NULL,
    correo VARCHAR(150) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS libro (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    titulo VARCHAR(200) NOT NULL,
    autor VARCHAR(150) NOT NULL,
    disponible BOOLEAN DEFAULT TRUE
);

CREATE TABLE IF NOT EXISTS prestamo (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    libro_id BIGINT NOT NULL,
    lector_id BIGINT NOT NULL,
    fecha_prestamo DATE NOT NULL,
    fecha_devolucion DATE NULL,

    CONSTRAINT fk_prestamo_libro FOREIGN KEY (libro_id) REFERENCES libro(id),
    CONSTRAINT fk_prestamo_lector FOREIGN KEY (lector_id) REFERENCES lector(id)
);

INSERT IGNORE INTO lector (id, nombre, correo) VALUES
(1, 'Ana López', 'ana@example.com'),
(2, 'Carlos Pérez', 'carlos@example.com');

INSERT IGNORE INTO libro (id, titulo, autor, disponible) VALUES
(1, 'Cien años de soledad', 'Gabriel García Márquez', TRUE),
(2, 'El Principito', 'Antoine de Saint-Exupéry', TRUE); [42001-230]
2025-08-28 22:41:16.230277-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Error de Sintaxis en sentencia SQL "CREATE [*]DATABASE IF NOT EXISTS biblioteca;\000aUSE biblioteca;\000a\000aCREATE TABLE IF NOT EXISTS lector (\000a    id BIGINT AUTO_INCREMENT PRIMARY KEY,\000a    nombre VARCHAR(100) NOT NULL,\000a    correo VARCHAR(150) UNIQUE NOT NULL\000a);\000a\000aCREATE TABLE IF NOT EXISTS libro (\000a    id BIGINT AUTO_INCREMENT PRIMARY KEY,\000a    titulo VARCHAR(200) NOT NULL,\000a    autor VARCHAR(150) NOT NULL,\000a    disponible BOOLEAN DEFAULT TRUE\000a);\000a\000aCREATE TABLE IF NOT EXISTS prestamo (\000a    id BIGINT AUTO_INCREMENT PRIMARY KEY,\000a    libro_id BIGINT NOT NULL,\000a    lector_id BIGINT NOT NULL,\000a    fecha_prestamo DATE NOT NULL,\000a    fecha_devolucion DATE NULL,\000a\000a    CONSTRAINT fk_prestamo_libro FOREIGN KEY (libro_id) REFERENCES libro(id),\000a    CONSTRAINT fk_prestamo_lector FOREIGN KEY (lector_id) REFERENCES lector(id)\000a);\000a\000aINSERT IGNORE INTO lector (id, nombre, correo) VALUES\000a(1, 'Ana López', 'ana@example.com'),\000a(2, 'Carlos Pérez', 'carlos@example.com');\000a\000aINSERT IGNORE INTO libro (id, titulo, autor, disponible) VALUES\000a(1, 'Cien años de soledad', 'Gabriel García Márquez', TRUE),\000a(2, 'El Principito', 'Antoine de Saint-Exupéry', TRUE);"; se esperaba "OR REPLACE, FORCE, VIEW, MATERIALIZED, ALIAS, SEQUENCE, USER, TRIGGER, ROLE, SCHEMA, CONSTANT, DOMAIN, TYPE, AGGREGATE, LINKED, MEMORY, CACHED, LOCAL TEMPORARY, GLOBAL TEMPORARY, TEMPORARY, TABLE, SYNONYM, UNIQUE, SPATIAL, INDEX"
Syntax error in SQL statement "CREATE [*]DATABASE IF NOT EXISTS biblioteca;\000aUSE biblioteca;\000a\000aCREATE TABLE IF NOT EXISTS lector (\000a    id BIGINT AUTO_INCREMENT PRIMARY KEY,\000a    nombre VARCHAR(100) NOT NULL,\000a    correo VARCHAR(150) UNIQUE NOT NULL\000a);\000a\000aCREATE TABLE IF NOT EXISTS libro (\000a    id BIGINT AUTO_INCREMENT PRIMARY KEY,\000a    titulo VARCHAR(200) NOT NULL,\000a    autor VARCHAR(150) NOT NULL,\000a    disponible BOOLEAN DEFAULT TRUE\000a);\000a\000aCREATE TABLE IF NOT EXISTS prestamo (\000a    id BIGINT AUTO_INCREMENT PRIMARY KEY,\000a    libro_id BIGINT NOT NULL,\000a    lector_id BIGINT NOT NULL,\000a    fecha_prestamo DATE NOT NULL,\000a    fecha_devolucion DATE NULL,\000a\000a    CONSTRAINT fk_prestamo_libro FOREIGN KEY (libro_id) REFERENCES libro(id),\000a    CONSTRAINT fk_prestamo_lector FOREIGN KEY (lector_id) REFERENCES lector(id)\000a);\000a\000aINSERT IGNORE INTO lector (id, nombre, correo) VALUES\000a(1, 'Ana López', 'ana@example.com'),\000a(2, 'Carlos Pérez', 'carlos@example.com');\000a\000aINSERT IGNORE INTO libro (id, titulo, autor, disponible) VALUES\000a(1, 'Cien años de soledad', 'Gabriel García Márquez', TRUE),\000a(2, 'El Principito', 'Antoine de Saint-Exupéry', TRUE);"; expected "OR REPLACE, FORCE, VIEW, MATERIALIZED, ALIAS, SEQUENCE, USER, TRIGGER, ROLE, SCHEMA, CONSTANT, DOMAIN, TYPE, AGGREGATE, LINKED, MEMORY, CACHED, LOCAL TEMPORARY, GLOBAL TEMPORARY, TEMPORARY, TABLE, SYNONYM, UNIQUE, SPATIAL, INDEX"; SQL statement:
CREATE DATABASE IF NOT EXISTS biblioteca;
USE biblioteca;

CREATE TABLE IF NOT EXISTS lector (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    nombre VARCHAR(100) NOT NULL,
    correo VARCHAR(150) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS libro (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    titulo VARCHAR(200) NOT NULL,
    autor VARCHAR(150) NOT NULL,
    disponible BOOLEAN DEFAULT TRUE
);

CREATE TABLE IF NOT EXISTS prestamo (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    libro_id BIGINT NOT NULL,
    lector_id BIGINT NOT NULL,
    fecha_prestamo DATE NOT NULL,
    fecha_devolucion DATE NULL,

    CONSTRAINT fk_prestamo_libro FOREIGN KEY (libro_id) REFERENCES libro(id),
    CONSTRAINT fk_prestamo_lector FOREIGN KEY (lector_id) REFERENCES lector(id)
);

INSERT IGNORE INTO lector (id, nombre, correo) VALUES
(1, 'Ana López', 'ana@example.com'),
(2, 'Carlos Pérez', 'carlos@example.com');

INSERT IGNORE INTO libro (id, titulo, autor, disponible) VALUES
(1, 'Cien años de soledad', 'Gabriel García Márquez', TRUE),
(2, 'El Principito', 'Antoine de Saint-Exupéry', TRUE); [42001-230]
2025-08-28 22:42:15.893668-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Error de Sintaxis en sentencia SQL "CREATE [*]DATABASE IF NOT EXISTS biblioteca;\000aUSE biblioteca;\000a\000aCREATE TABLE IF NOT EXISTS lector (\000a    id BIGINT AUTO_INCREMENT PRIMARY KEY,\000a    nombre VARCHAR(100) NOT NULL,\000a    correo VARCHAR(150) UNIQUE NOT NULL\000a);\000a\000aCREATE TABLE IF NOT EXISTS libro (\000a    id BIGINT AUTO_INCREMENT PRIMARY KEY,\000a    titulo VARCHAR(200) NOT NULL,\000a    autor VARCHAR(150) NOT NULL,\000a    disponible BOOLEAN DEFAULT TRUE\000a);\000a\000aCREATE TABLE IF NOT EXISTS prestamo (\000a    id BIGINT AUTO_INCREMENT PRIMARY KEY,\000a    libro_id BIGINT NOT NULL,\000a    lector_id BIGINT NOT NULL,\000a    fecha_prestamo DATE NOT NULL,\000a    fecha_devolucion DATE NULL,\000a\000a    CONSTRAINT fk_prestamo_libro FOREIGN KEY (libro_id) REFERENCES libro(id),\000a    CONSTRAINT fk_prestamo_lector FOREIGN KEY (lector_id) REFERENCES lector(id)\000a);\000a\000aINSERT IGNORE INTO lector (id, nombre, correo) VALUES\000a(1, 'Ana López', 'ana@example.com'),\000a(2, 'Carlos Pérez', 'carlos@example.com');\000a\000aINSERT IGNORE INTO libro (id, titulo, autor, disponible) VALUES\000a(1, 'Cien años de soledad', 'Gabriel García Márquez', TRUE),\000a(2, 'El Principito', 'Antoine de Saint-Exupéry', TRUE);"; se esperaba "OR REPLACE, FORCE, VIEW, MATERIALIZED, ALIAS, SEQUENCE, USER, TRIGGER, ROLE, SCHEMA, CONSTANT, DOMAIN, TYPE, AGGREGATE, LINKED, MEMORY, CACHED, LOCAL TEMPORARY, GLOBAL TEMPORARY, TEMPORARY, TABLE, SYNONYM, UNIQUE, SPATIAL, INDEX"
Syntax error in SQL statement "CREATE [*]DATABASE IF NOT EXISTS biblioteca;\000aUSE biblioteca;\000a\000aCREATE TABLE IF NOT EXISTS lector (\000a    id BIGINT AUTO_INCREMENT PRIMARY KEY,\000a    nombre VARCHAR(100) NOT NULL,\000a    correo VARCHAR(150) UNIQUE NOT NULL\000a);\000a\000aCREATE TABLE IF NOT EXISTS libro (\000a    id BIGINT AUTO_INCREMENT PRIMARY KEY,\000a    titulo VARCHAR(200) NOT NULL,\000a    autor VARCHAR(150) NOT NULL,\000a    disponible BOOLEAN DEFAULT TRUE\000a);\000a\000aCREATE TABLE IF NOT EXISTS prestamo (\000a    id BIGINT AUTO_INCREMENT PRIMARY KEY,\000a    libro_id BIGINT NOT NULL,\000a    lector_id BIGINT NOT NULL,\000a    fecha_prestamo DATE NOT NULL,\000a    fecha_devolucion DATE NULL,\000a\000a    CONSTRAINT fk_prestamo_libro FOREIGN KEY (libro_id) REFERENCES libro(id),\000a    CONSTRAINT fk_prestamo_lector FOREIGN KEY (lector_id) REFERENCES lector(id)\000a);\000a\000aINSERT IGNORE INTO lector (id, nombre, correo) VALUES\000a(1, 'Ana López', 'ana@example.com'),\000a(2, 'Carlos Pérez', 'carlos@example.com');\000a\000aINSERT IGNORE INTO libro (id, titulo, autor, disponible) VALUES\000a(1, 'Cien años de soledad', 'Gabriel García Márquez', TRUE),\000a(2, 'El Principito', 'Antoine de Saint-Exupéry', TRUE);"; expected "OR REPLACE, FORCE, VIEW, MATERIALIZED, ALIAS, SEQUENCE, USER, TRIGGER, ROLE, SCHEMA, CONSTANT, DOMAIN, TYPE, AGGREGATE, LINKED, MEMORY, CACHED, LOCAL TEMPORARY, GLOBAL TEMPORARY, TEMPORARY, TABLE, SYNONYM, UNIQUE, SPATIAL, INDEX"; SQL statement:
CREATE DATABASE IF NOT EXISTS biblioteca;
USE biblioteca;

CREATE TABLE IF NOT EXISTS lector (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    nombre VARCHAR(100) NOT NULL,
    correo VARCHAR(150) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS libro (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    titulo VARCHAR(200) NOT NULL,
    autor VARCHAR(150) NOT NULL,
    disponible BOOLEAN DEFAULT TRUE
);

CREATE TABLE IF NOT EXISTS prestamo (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    libro_id BIGINT NOT NULL,
    lector_id BIGINT NOT NULL,
    fecha_prestamo DATE NOT NULL,
    fecha_devolucion DATE NULL,

    CONSTRAINT fk_prestamo_libro FOREIGN KEY (libro_id) REFERENCES libro(id),
    CONSTRAINT fk_prestamo_lector FOREIGN KEY (lector_id) REFERENCES lector(id)
);

INSERT IGNORE INTO lector (id, nombre, correo) VALUES
(1, 'Ana López', 'ana@example.com'),
(2, 'Carlos Pérez', 'carlos@example.com');

INSERT IGNORE INTO libro (id, titulo, autor, disponible) VALUES
(1, 'Cien años de soledad', 'Gabriel García Márquez', TRUE),
(2, 'El Principito', 'Antoine de Saint-Exupéry', TRUE); [42001-230]
2025-08-28 22:42:49.283134-05:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Error de Sintaxis en sentencia SQL "CREATE [*]DATABASE IF NOT EXISTS biblioteca;\000aUSE biblioteca;\000a\000aCREATE TABLE IF NOT EXISTS lector (\000a    id BIGINT AUTO_INCREMENT PRIMARY KEY,\000a    nombre VARCHAR(100) NOT NULL,\000a    correo VARCHAR(150) UNIQUE NOT NULL\000a);\000a\000aCREATE TABLE IF NOT EXISTS libro (\000a    id BIGINT AUTO_INCREMENT PRIMARY KEY,\000a    titulo VARCHAR(200) NOT NULL,\000a    autor VARCHAR(150) NOT NULL,\000a    disponible BOOLEAN DEFAULT TRUE\000a);\000a\000aCREATE TABLE IF NOT EXISTS prestamo (\000a    id BIGINT AUTO_INCREMENT PRIMARY KEY,\000a    libro_id BIGINT NOT NULL,\000a    lector_id BIGINT NOT NULL,\000a    fecha_prestamo DATE NOT NULL,\000a    fecha_devolucion DATE NULL,\000a\000a    CONSTRAINT fk_prestamo_libro FOREIGN KEY (libro_id) REFERENCES libro(id),\000a    CONSTRAINT fk_prestamo_lector FOREIGN KEY (lector_id) REFERENCES lector(id)\000a);\000a\000aINSERT IGNORE INTO lector (id, nombre, correo) VALUES\000a(1, 'Ana López', 'ana@example.com'),\000a(2, 'Carlos Pérez', 'carlos@example.com');\000a\000aINSERT IGNORE INTO libro (id, titulo, autor, disponible) VALUES\000a(1, 'Cien años de soledad', 'Gabriel García Márquez', TRUE),\000a(2, 'El Principito', 'Antoine de Saint-Exupéry', TRUE);"; se esperaba "OR REPLACE, FORCE, VIEW, MATERIALIZED, ALIAS, SEQUENCE, USER, TRIGGER, ROLE, SCHEMA, CONSTANT, DOMAIN, TYPE, AGGREGATE, LINKED, MEMORY, CACHED, LOCAL TEMPORARY, GLOBAL TEMPORARY, TEMPORARY, TABLE, SYNONYM, UNIQUE, SPATIAL, INDEX"
Syntax error in SQL statement "CREATE [*]DATABASE IF NOT EXISTS biblioteca;\000aUSE biblioteca;\000a\000aCREATE TABLE IF NOT EXISTS lector (\000a    id BIGINT AUTO_INCREMENT PRIMARY KEY,\000a    nombre VARCHAR(100) NOT NULL,\000a    correo VARCHAR(150) UNIQUE NOT NULL\000a);\000a\000aCREATE TABLE IF NOT EXISTS libro (\000a    id BIGINT AUTO_INCREMENT PRIMARY KEY,\000a    titulo VARCHAR(200) NOT NULL,\000a    autor VARCHAR(150) NOT NULL,\000a    disponible BOOLEAN DEFAULT TRUE\000a);\000a\000aCREATE TABLE IF NOT EXISTS prestamo (\000a    id BIGINT AUTO_INCREMENT PRIMARY KEY,\000a    libro_id BIGINT NOT NULL,\000a    lector_id BIGINT NOT NULL,\000a    fecha_prestamo DATE NOT NULL,\000a    fecha_devolucion DATE NULL,\000a\000a    CONSTRAINT fk_prestamo_libro FOREIGN KEY (libro_id) REFERENCES libro(id),\000a    CONSTRAINT fk_prestamo_lector FOREIGN KEY (lector_id) REFERENCES lector(id)\000a);\000a\000aINSERT IGNORE INTO lector (id, nombre, correo) VALUES\000a(1, 'Ana López', 'ana@example.com'),\000a(2, 'Carlos Pérez', 'carlos@example.com');\000a\000aINSERT IGNORE INTO libro (id, titulo, autor, disponible) VALUES\000a(1, 'Cien años de soledad', 'Gabriel García Márquez', TRUE),\000a(2, 'El Principito', 'Antoine de Saint-Exupéry', TRUE);"; expected "OR REPLACE, FORCE, VIEW, MATERIALIZED, ALIAS, SEQUENCE, USER, TRIGGER, ROLE, SCHEMA, CONSTANT, DOMAIN, TYPE, AGGREGATE, LINKED, MEMORY, CACHED, LOCAL TEMPORARY, GLOBAL TEMPORARY, TEMPORARY, TABLE, SYNONYM, UNIQUE, SPATIAL, INDEX"; SQL statement:
CREATE DATABASE IF NOT EXISTS biblioteca;
USE biblioteca;

CREATE TABLE IF NOT EXISTS lector (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    nombre VARCHAR(100) NOT NULL,
    correo VARCHAR(150) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS libro (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    titulo VARCHAR(200) NOT NULL,
    autor VARCHAR(150) NOT NULL,
    disponible BOOLEAN DEFAULT TRUE
);

CREATE TABLE IF NOT EXISTS prestamo (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    libro_id BIGINT NOT NULL,
    lector_id BIGINT NOT NULL,
    fecha_prestamo DATE NOT NULL,
    fecha_devolucion DATE NULL,

    CONSTRAINT fk_prestamo_libro FOREIGN KEY (libro_id) REFERENCES libro(id),
    CONSTRAINT fk_prestamo_lector FOREIGN KEY (lector_id) REFERENCES lector(id)
);

INSERT IGNORE INTO lector (id, nombre, correo) VALUES
(1, 'Ana López', 'ana@example.com'),
(2, 'Carlos Pérez', 'carlos@example.com');

INSERT IGNORE INTO libro (id, titulo, autor, disponible) VALUES
(1, 'Cien años de soledad', 'Gabriel García Márquez', TRUE),
(2, 'El Principito', 'Antoine de Saint-Exupéry', TRUE); [42001-230]
